{"version":3,"sources":["index.js"],"names":["ACCESS_TOKEN","CANVAS_SEND","PHOTO","CORS_PROXY","Mem","id","scr","texts","color","size","btn","i","ii","document","getElementById","innerHTML","canvas","ctx","getContext","img","Image","src","onload","height","width","drawImage","font","fillStyle","textAlign","fillText","text","x","y","this","write","new_texts","clearRect","lable","value","lll","length","max_size","nnn","words","split","n_words","count","j","new_string","k","undefined","inp","oninput","onclick","a","async","connect","send","start","load_mem","className","append","_div","createElement","subscribe","event","detail","type","data","console","log","access_token","error_data","request_id","alert","response","upload_url","link","replace","toDataURL","request","FormData","fetch","method","body","then","json","ansv"],"mappings":"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","file":"static/js/main.c60b61c0.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport fetchStream from 'fetch-readablestream';\nimport './index.css';\n\nimport connect from '@vkontakte/vk-connect';\n\nconst CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\nconst APP_ID = 7245851;\n\nfunction postResult(){\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"test_selected_category.php\", false);\n    xhr.setRequestHeader('Content-Type', \"URL\");\n    xhr.send(\"photo=\" + \"1\");\n    alert(\"anv: \" + xhr.responseText);\n   \n    \n}\n\n\nvar ACCESS_TOKEN, CANVAS_SEND, PHOTO;\n\n//connect.send('7245851'); \n\n\nconnect.subscribe(async (event) =>  {\n\n  const { type, data } = event.detail;\n\n  console.log(\"тип: \" +  type);\n  console.log(10);\n\n  if (type == \"VKWebAppAccessTokenReceived\") {\n    ACCESS_TOKEN = data.access_token;\n    //alert(ACCESS_TOKEN);\n  }\n  if (type == \"VKWebAppCallAPIMethodFailed\") {\n    //alert(data.error_data);\n    console.log(data.error_data);\n  }\n\n  \n  if (type == \"VKWebAppCallAPIMethodResult\") {\n\n    console.log(1);\n    console.log(data);\n    console.log(1);\n    if (data.request_id == \"mem\") {\n      alert(data.response.upload_url);\n\n\n      var upload_url = data.response.upload_url;\n\n\n      var link = upload_url.replace(\"https://\", \"\");\n\n      alert(link);\n\n\n\n      \n\n      var wallPhoto = CANVAS_SEND.toDataURL();\n\n      //var _data = {\"access_token\": ACCESS_TOKEN, \"v\": \"5.101\", photo:wallPhoto};\n      //var r = reqiest.post(uploadUrl, _data);\n\n      //connect.send(\"VKWebAppCallAPIMethod\", {\"method\": \"photos.getWallUploadServer\", \"request_id\": \"send_photo\", \"params\": { \"photo\": \"v\":\"5.103\", \"access_token\":ACCESS_TOKEN}});\n      \n      //var script = document.createElement('SCRIPT');\n      //script.src = \"https://api.vk.com/method/users.get?user_ids=210700286&fields=bdate&v=5.103&callback=callbackFunc\";\n      //document.getElementsByTagName(\"head\")[0].appendChild(script);\n      //function callbackFunc(result) {\n      //alert(result.response[0].first_name)\n\n\n\n      \n      var request = new FormData();\n      \n      request.append(\"photo\", PHOTO);\n\n      var ansv= await fetch(CORS_PROXY + link, {\n            method: \"POST\",\n            body: request\n      }).then((response) => {\n\n        response.json()\n      });\n\n      //alert(photo);\n      console.log(ansv);\n\n  \n\n\n      /*\n\n      const formData = new FormData();\n\n      formData.append('photo', wallPhoto);\n\n      var xhr = new XMLHttpRequest();\n      xhr.open( 'POST', CORS_PROXY + upload_url, true )\n      xhr.onload = xhr.onerror = function() {\n        console.log( xhr.responseText );\n        alert(\"sever ansv\");\n        // тут будет ответ от ВК, который надо использовать в сохранении фото в альбом или на стену\n      };\n      xhr.send( formData )\n      */\n      \n    }\n\n\n\n\n      /*\n      var wallPhoto = CANVAS_SEND.toDataURL();\n\n        const request = new FormData();\n        request.append(\"photo\", await fetchFileStream(wallPhoto, \"story.png\", 'image/png'));\n        const {server, photo, hash} = await fetch(CORS_PROXY + uploadUrl, {\n            method: \"POST\",\n            body: request\n        }).then((response) => {\n          response.json();\n          alert(response);\n\n        });\n        console.log(\"туаааааааа\")\n        alert(photo);\n\n      */\n    }\n  \n\n  \n \n  console.log(data);\n  //alert( \"type: \" + type);\n\n\n \n \n}); \n\nconnect.send(\"VKWebAppInit\", {});\n\nfunction Mem(id, scr, texts, color, size)\n{\n    var btn =\"\";\n    for (var i in texts) {\n    var ii = i - 0 + 1;\n    btn+=  `<input id=\"in` + (ii) + \"\" + (id) + `\" type = \"text\" class = \"ctr_inp\">`;\n  }\n\n\n  document.getElementById(\"root\").innerHTML = \"<div class = 'mem' >\"\n    + `<input id=\"back` + id + `\" type = \"submit\" value=\"Назад\" class = \"ctr_inp\">`\n    + btn + \n    `<canvas id=\"cvs`+id+`\" class = \"cvs\"></canvas>\n    <input id=\"dvl`+id+`\" type = \"submit\" value=\"Отправить\" class = \"ctr_inp\"></div> \"`; \n\n    var canvas = document.getElementById(\"cvs\" + id);\n    var ctx = canvas.getContext('2d');\n\n    var img = new Image();\n    img.src = scr;\n    img.onload = () => {\n      canvas.height = img.height;\n      canvas.width = img.width;\n\n      ctx.drawImage(img,0,0);\n      for (var i in texts) {\n        ctx.font = \"bold  \" +size +\"px Verdana\";\n        ctx.fillStyle = color;\n        ctx.textAlign = \"center\";\n        ctx.fillText(texts[i].text, texts[i].x, texts[i].y);\n      }   \n    }\n\n    this.write = function (new_texts) {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img,0,0);\n      for (var i in texts) {\n\n        var lable = new_texts[i].value;\n        var lll =  lable.length;\n\n        if (lll <= texts[i].max_size) {\n          ctx.font = \"bold  \" +size +\"px Verdana\";\n          ctx.fillStyle = color;\n          ctx.textAlign = \"center\";\n          ctx.fillText(new_texts[i].value, texts[i].x, texts[i].y);\n        }\n        else {\n          var nnn = lll/texts[i].max_size;\n          var words = lable.split(\" \");\n          var n_words = words.length;\n   \n\n          var count = 0\n\n          for (var j = 0; j < nnn; j++) {\n          var new_string = \"\";\n\n\n\n           for (var k = 0; k < n_words/nnn; k++) {\n\n            if (words[count] != undefined)\n            new_string+= words[count] + \" \";\n            //console.log (Math.floor(j*n_words/nnn) + k);\n            count++;\n\n           } \n\n           //var newstr = new_string.split(\"undefined\"); \n           //new_string = \"\";\n\n           //for (var b = 0; b < newstr.length; b++) {\n           // new_string+=newstr[i] + \" \"; \n           //}\n\n\n            ctx.font = \"bold  \" +size +\"px Verdana\";\n            ctx.fillStyle = color;\n            ctx.textAlign = \"center\";\n            ctx.fillText(new_string, texts[i].x, texts[i].y + size*j);           \n          }\n        }\n\n\n      }\n    }\n\n\n    var inp = [];\n    for (var i in texts) {\n      var ii = i - 0 + 1;\n      inp[i] = document.getElementById(\"in\" + ii + \"\" + id);\n      inp[i].value = texts[i].text;\n      inp[i].oninput = () =>{\n        this.write(inp);\n      }\n    }\n\n  var dvl = document.getElementById(\"dvl\" + id);\n\n  dvl.onclick = async ()=> {\n\n      //await publishOnWall(canvas.toDataURL());\n    CANVAS_SEND = canvas;\n    \n    PHOTO = img;\n  //connect.send(\"VKWebAppShowWallPostBox\", {\"message\": \"Hello!\"});\n    //download(canvas, 'myimage.png');\n    \n    //ALERT();\n\n    //connect.send(\"VKWebAppCallAPIMethod\", {\"method\": \"users.get\", \"request_id\": \"32test\", \"params\": {\"user_ids\": \"1\", \"v\":\"5.103\", \"access_token\":\"your_token\"}});\n   /* connect.send(\"VKWebAppShowImages\", {\n      images: [\n        canvas.toDataURL(\"image/png;base64\"),\n      ]\n    });\n    */\n\n\n\n\n\n\n    var s =  connect.send(\"VKWebAppCallAPIMethod\", {\"method\": \"photos.getWallUploadServer\", \"request_id\": \"mem\", \"params\": { \"v\":\"5.103\", \"access_token\":ACCESS_TOKEN}});\n    //alert(s);\n  }\n\n  var back = document.getElementById(\"back\" + id);\n  back.onclick = () =>{\n    start();\n  }\n}\n\nfunction load_mem(id, scr, texts, color, size){\n  var img = new Image();\n  img.src = scr;\n  img.className = \"mem_img\";\n  img.id = \"mem_img\" + id;\n  document.getElementById(\"mem_list\").append(img);\n  var img =  document.getElementById(\"mem_img\" + id);\n  img.onclick = () => {\n    new Mem(id, scr, texts, color, size);\n  }\n}\n\nfunction load_line()\n{\n  var html = \"<div class = 'line_line' > <input type  = 'button' class = 'btn_btn' value = 'Новинки' id='kt1'> <input id='kt2' type  = 'button' class = 'btn_btn' value = 'Известные'>  <input id='kt3' type  = 'button' class = 'btn_btn' value = 'Баяны'> </div>\"\n  document.getElementById(\"root\").innerHTML = html ;\n  document.getElementById(\"kt1\").onclick = ()=> {\n    document.getElementById(\"mem_list\").innerHTML = \"\";\n    new load_mem(5, \"mem8.jpg\", [{text: \"Oyhh\", x: 350, y:350, max_size: 20}], \"#FFFFFF\", 50);\n    new load_mem(2, \"mem5.jpg\", [{text: \"Oyhh\", x: 350, y:350, max_size: 20}], \"#FFFFFF\", 50);\n    new load_mem(3, \"mem6.jpg\", [{text: \"Lapotaa\", x: 350, y:350,max_size: 20}], \"#FFFFFF\", 50);\n    new load_mem(1, \"mem1.jpg\", [{text: \"No\", x: 700, y:100, max_size: 7}, {text: \"Yes\", x: 700, y:600, max_size: 7}], \"#000000\", 50);\n\n  }\n  document.getElementById(\"kt2\").onclick = ()=> {\n\n    document.getElementById(\"mem_list\").innerHTML = \"\";\n\n    new load_mem(4, \"mem7.jpg\", [{text: \"No\", x: 150, y:60, max_size: 7}, {text: \"Yes\", x: 150, y:150, max_size: 7}], \"#000000\", 10);\n    new load_mem(5, \"mem8.jpg\", [{text: \"Oyhh\", x: 350, y:350, max_size: 20}], \"#FFFFFF\", 50);\n    new load_mem(6, \"mem9.jpg\", [{text: \"Oyhh\", x: 350, y:350, max_size: 20}], \"#000000\", 50);\n    new load_mem(7, \"mem10.jpg\", [{text: \"Oyhh\", x: 1000, y:1000, max_size: 20}], \"#FFFFFF\", 100);   \n  }\n  document.getElementById(\"kt3\").onclick = ()=> {\n    document.getElementById(\"mem_list\").innerHTML = \"\";\n    new load_mem(2, \"mem5.jpg\", [{text: \"Oyhh\", x: 350, y:350, max_size: 20}], \"#FFFFFF\", 50);\n    new load_mem(3, \"mem6.jpg\", [{text: \"Lapotaa\", x: 350, y:350,max_size: 20}], \"#FFFFFF\", 50);\n \n    new load_mem(5, \"mem8.jpg\", [{text: \"Oyhh\", x: 350, y:350, max_size: 20}], \"#FFFFFF\", 50);\n    new load_mem(6, \"mem9.jpg\", [{text: \"Oyhh\", x: 350, y:350, max_size: 20}], \"#000000\", 50);\n    new load_mem(7, \"mem10.jpg\", [{text: \"Oyhh\", x: 1000, y:1000, max_size: 20}], \"#FFFFFF\", 100);  \n  }\n}\n\n\nfunction start() {\n  document.getElementById(\"root\").innerHTML = \"\";\n\n\n\n  load_line();\n\n\n  var _div = document.createElement(\"div\");\n  _div.className = \"mem_list\";\n  _div.id = \"mem_list\";\n  document.getElementById(\"root\").append(_div);\n\n  \n  new load_mem(2, \"mem5.jpg\", [{text: \"Oyhh\", x: 350, y:350, max_size: 20}], \"#FFFFFF\", 50);\n  new load_mem(3, \"mem6.jpg\", [{text: \"Lapotaa\", x: 350, y:350,max_size: 20}], \"#FFFFFF\", 50);\n  new load_mem(1, \"mem1.jpg\", [{text: \"No\", x: 700, y:100, max_size: 7}, {text: \"Yes\", x: 700, y:600, max_size: 7}], \"#000000\", 50);\n  new load_mem(4, \"mem7.jpg\", [{text: \"No\", x: 150, y:60, max_size: 7}, {text: \"Yes\", x: 150, y:150, max_size: 7}], \"#000000\", 10);\n  new load_mem(5, \"mem8.jpg\", [{text: \"Oyhh\", x: 350, y:350, max_size: 20}], \"#FFFFFF\", 50);\n  new load_mem(6, \"mem9.jpg\", [{text: \"Oyhh\", x: 350, y:350, max_size: 20}], \"#000000\", 50);\n  new load_mem(7, \"mem10.jpg\", [{text: \"Oyhh\", x: 1000, y:1000, max_size: 20}], \"#FFFFFF\", 100);\n\n\n}\n\n\n\n\nfunction main()\n{\n\n  start();\n  connect.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7245851, \"scope\":  \"friends,photos\"});\n}\n\nmain();\n\n\n\n\n\n// скаченая непонятная залупа \nfunction download(canvas, filename) {\n  var lnk = document.createElement('a'), e;\n  lnk.download = filename;\n  lnk.href = canvas.toDataURL(\"image/png;base64\");\n  if (document.createEvent) {\n    e = document.createEvent(\"MouseEvents\");\n    e.initMouseEvent(\"click\", true, true, window,\n                     0, 0, 0, 0, 0, false, false, false,\n                     false, 0, null);\n\n    lnk.dispatchEvent(e);\n  } else if (lnk.fireEvent) {\n    lnk.fireEvent(\"onclick\");\n  }\n}\n\n\n\n\n\nconst readAllChunks = (readableStream) => {\n    const reader = readableStream.getReader();\n    const chunks = [];\n\n    const pump = () => {\n        return reader.read().then(({value, done}) => {\n            if (done)\n                return chunks;\n            chunks.push(value);\n            return pump();\n        });\n    }\n\n    return pump();\n}\n\n\n\n \n\n\n\n\nasync function fetchFileStream(fileAddress, filename, imgType) {\n    return fetchStream(fileAddress)\n        .then(response => readAllChunks(response.body))\n        .then(chunks => new File(chunks, filename, {type: imgType}));\n}\n\n  async function publishOnWall(wallPhoto) {\n        const authToken = await connect.send(\"VKWebAppGetAuthToken\", {\n            \"app_id\": APP_ID,\n            \"scope\": \"photos\"\n        });\n        const serverToPhoto = await connect.send(\"VKWebAppCallAPIMethod\", {\n            method: \"photos.getWallUploadServer\",\n            params: {access_token: ACCESS_TOKEN, v: \"5.95\"}\n        });\n        const uploadUrl = serverToPhoto.data.response.upload_url;\n        const request = new FormData();\n        request.append(\"photo\", await fetchFileStream(wallPhoto, \"story.png\", 'image/png'));\n        const {server, photo, hash} = await fetch(CORS_PROXY + uploadUrl, {\n            method: \"POST\",\n            body: request\n        }).then((response) => response.json());\n\n\n        const res = await connect.send(\"VKWebAppCallAPIMethod\", {\n            method: \"photos.saveWallPhoto\",\n            params: {\n                access_token: ACCESS_TOKEN, server, photo, hash,\n                v: \"5.95\"\n            }\n        });\n        const {id: photo_id, owner_id} = res.data.response[0];\n        await connect.send(\"VKWebAppShowWallPostBox\", {\n            message: `Сообщение на стену с фото`,\n            attachments: `photo${owner_id}_${photo_id},https://vk.com/app${APP_ID}`\n        });\n    }"],"sourceRoot":""}